(defun minimax-eval (stone board pointboard)
  (let ((acc 0))
    (dotimes (y 8)
      (dotimes (x 8)
        (setf acc (+ acc (cond ((eq (onelook board (cons x y)) 'empty)
                                0)
                               ((eq (onelook board (cons x y)) stone)
                                (onelook pointboard (cons x y)))
                               (t
                                (- (onelook pointboard (cons x y)))))))))
    acc))

(defun pointboard-a ()
  #2A ((120 -20 20  5  5 20 -20 120)
       (-20 -40 -5 -5 -5 -5 -40 -20)
       ( 20  -5 15  3  3 15  -5  20)
       (  5  -5  3  3  3  3  -5  20)
       (  5  -5  3  3  3  3  -5   5)
       ( 20  -5 15  3  3 15  -5  20)
       (-20 -40 -5 -5 -5 -5 -40 -20)
       (120 -20 20  5  5 20 -20 120)))

(defun pointboard-b ()
  #2A (( 30 -12  0 -1 -1  0 -12  30)
       (-12 -15 -3 -3 -3 -3 -15 -12)
       (  0  -3  0 -1 -1  0  -3   0)
       ( -1  -3 -1 -1 -1 -1  -3  -1)
       ( -1  -3 -1 -1 -1 -1  -3  -1)
       (  0  -3  0 -1 -1  0  -3   0)
       (-12 -15 -3 -3 -3 -3 -15 -12)
       ( 30 -12  0 -1 -1  0 -12  30)))
